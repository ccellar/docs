"use strict";(self.webpackChunkevcc_docs=self.webpackChunkevcc_docs||[]).push([[3506],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},i={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),u=o(a),c=r,y=u["".concat(p,".").concat(c)]||u[c]||i[c]||l;return a?n.createElement(y,s(s({ref:t},d),{},{components:a})):n.createElement(y,s({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=u;var m={};for(var p in t)hasOwnProperty.call(t,p)&&(m[p]=t[p]);m.originalType=e,m.mdxType="string"==typeof e?e:r,s[1]=m;for(var o=2;o<l;o++)s[o]=a[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},58215:function(e,t,a){a.d(t,{Z:function(){return r}});var n=a(67294);function r(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return d}});var n=a(87462),r=a(67294),l=a(72389),s=a(5979),m=a(86010),p="tabItem_LplD";function o(e){var t,a,l,o=e.lazy,d=e.block,i=e.defaultValue,u=e.values,c=e.groupId,y=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=u?u:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,s.lx)(v,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===i?i:null!=(t=null!=i?i:null==(a=g.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=g[0])?void 0:l.props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,s.UB)(),T=h.tabGroupChoices,N=h.setTabGroupChoices,P=(0,r.useState)(k),f=P[0],S=P[1],I=[],x=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var w=T[c];null!=w&&w!==f&&v.some((function(e){return e.value===w}))&&S(w)}var A=function(e){var t=e.currentTarget,a=I.indexOf(t),n=v[a].value;n!==f&&(x(t),S(n),null!=c&&N(c,n))},H=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=I.indexOf(e.currentTarget)+1;a=I[n]||I[0];break;case"ArrowLeft":var r=I.indexOf(e.currentTarget)-1;a=I[r]||I[I.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":d},y)},v.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:f===t?0:-1,"aria-selected":f===t,key:t,ref:function(e){return I.push(e)},onKeyDown:H,onFocus:A,onClick:A},l,{className:(0,m.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":f===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}function d(e){var t=(0,l.Z)();return r.createElement(o,(0,n.Z)({key:String(t)},e))}},95059:function(e,t,a){a.d(t,{ZP:function(){return p}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),s=["components"],m={toc:[]};function p(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Sponsor-Token erforderlich")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Weitere Informationen zum \ud83d\udc9a evcc Sponsorship gibt es ",(0,l.kt)("a",{parentName:"p",href:"/docs/sponsorship"},"hier"),"."))))}p.isMDXComponent=!0},52468:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return v},frontMatter:function(){return d},metadata:function(){return u},toc:function(){return y}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),s=a(9877),m=a(58215),p=a(95059),o=["components"],d={sidebar_position:2},i="Hausinstallation",u={unversionedId:"devices/meters",id:"devices/meters",title:"Hausinstallation",description:"Die aufgelisteten Ger\xe4te k\xf6nnen als meter f\xfcr verschiedene Zwecke eingebunden werden. Um die Str\xf6me am Netzanschluss grid zu erhalten, die PV Leistung pv, die Hausbatterie battery oder die Ladeleistung des EV charge.",source:"@site/docs/devices/meters.mdx",sourceDirName:"devices",slug:"/devices/meters",permalink:"/docs/devices/meters",editUrl:"https://github.com/evcc-io/docs/tree/main/docs/devices/meters.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Wallboxen",permalink:"/docs/devices/chargers"},next:{title:"Fahrzeuge",permalink:"/docs/devices/vehicles"}},c={},y=[{value:"Carlo Gavazzi EM 24",id:"carlo-gavazzi-em-24",level:2},{value:"cFos PowerBrain Meter \ud83d\udc9a",id:"cfos-powerbrain-meter-",level:2},{value:"Discovergy",id:"discovergy",level:2},{value:"DSMR",id:"dsmr",level:2},{value:"E3DC",id:"e3dc",level:2},{value:"Eastron",id:"eastron",level:2},{value:"SDM 630",id:"sdm-630",level:3},{value:"SDM 72/220/230",id:"sdm-72220230",level:3},{value:"SDM 72v2",id:"sdm-72v2",level:3},{value:"FENECON",id:"fenecon",level:2},{value:"Fronius",id:"fronius",level:2},{value:"Solar API V1",id:"solar-api-v1",level:3},{value:"Symo GEN24 Plus",id:"symo-gen24-plus",level:3},{value:"Huawei",id:"huawei",level:2},{value:"SUN2000 via RS485 Modbus",id:"sun2000-via-rs485-modbus",level:3},{value:"SUN2000 with SDongle",id:"sun2000-with-sdongle",level:3},{value:"SUN2000 with SDongle &amp; Power Sensor",id:"sun2000-with-sdongle--power-sensor",level:3},{value:"Kostal",id:"kostal",level:2},{value:"Piko MP Plus",id:"piko-mp-plus",level:3},{value:"Piko, Piko BA",id:"piko-piko-ba",level:3},{value:"Plenticore Hybrid",id:"plenticore-hybrid",level:3},{value:"Smart Energy Meter",id:"smart-energy-meter",level:3},{value:"Smart Energy Meter (\xfcber den Wechselrichter)",id:"smart-energy-meter-\xfcber-den-wechselrichter",level:3},{value:"LG ESS Home 8/10",id:"lg-ess-home-810",level:2},{value:"OpenEMS",id:"openems",level:2},{value:"Powerdog",id:"powerdog",level:2},{value:"Powerfox Poweropti",id:"powerfox-poweropti",level:2},{value:"RCT Power",id:"rct-power",level:2},{value:"SENEC .Home",id:"senec-home",level:2},{value:"Shelly 3EM",id:"shelly-3em",level:2},{value:"Siemens PAC 2200",id:"siemens-pac-2200",level:2},{value:"SMA",id:"sma",level:2},{value:"Data Manager M Lite",id:"data-manager-m-lite",level:3},{value:"Energy Meter",id:"energy-meter",level:3},{value:"Smart Energy Hybrid-Wechselrichter",id:"smart-energy-hybrid-wechselrichter",level:3},{value:"Sunny Home Manager 2.0",id:"sunny-home-manager-20",level:3},{value:"Wechselrichter",id:"wechselrichter",level:3},{value:"SolarEdge",id:"solaredge",level:2},{value:"Hybrid",id:"hybrid",level:3},{value:"Wechselrichter",id:"wechselrichter-1",level:3},{value:"Solarlog",id:"solarlog",level:2},{value:"Solarwatt",id:"solarwatt",level:2},{value:"MyReserve",id:"myreserve",level:3},{value:"MyReserve Matrix (LAN oder PowerGateway)",id:"myreserve-matrix-lan-oder-powergateway",level:3},{value:"Solax",id:"solax",level:2},{value:"Hybrid",id:"hybrid-1",level:3},{value:"Hybrid X3",id:"hybrid-x3",level:3},{value:"Wechselrichter",id:"wechselrichter-2",level:3},{value:"Sonnenbatterie Eco/10",id:"sonnenbatterie-eco10",level:2},{value:"Sungrow Inverter",id:"sungrow-inverter",level:2},{value:"Tesla Powerwall",id:"tesla-powerwall",level:2},{value:"TQ Energy Manager EM2xx/EM3xx",id:"tq-energy-manager-em2xxem3xx",level:2},{value:"VARTA",id:"varta",level:2},{value:"Energiespeicher (kein PV-Sensor)",id:"energiespeicher-kein-pv-sensor",level:3},{value:"Energiespeicher (mit PV-Sensor)",id:"energiespeicher-mit-pv-sensor",level:3},{value:"Victron Energy",id:"victron-energy",level:2},{value:"Generische Unterst\xfctzung",id:"generische-unterst\xfctzung",level:2},{value:"manuell",id:"manuell",level:3},{value:"Volksz\xe4hler",id:"volksz\xe4hler",level:3},{value:"HTTP API",id:"http-api",level:4},{value:"HTTP API, Import &amp; Export",id:"http-api-import--export",level:4},{value:"WebSocket API",id:"websocket-api",level:4},{value:"vzlogger",id:"vzlogger",level:3},{value:"Wechselrichter (SunSpec)",id:"wechselrichter-sunspec",level:3},{value:"Schaltbare Steckdosen",id:"schaltbare-steckdosen",level:2},{value:"AVM FritzDECT",id:"avm-fritzdect",level:3},{value:"Shelly 1PM",id:"shelly-1pm",level:3},{value:"Tasmota",id:"tasmota",level:3},{value:"TP-Link",id:"tp-link",level:3},{value:"H-Series Smart Plug",id:"h-series-smart-plug",level:4},{value:"Tapo P-Series Smart Plug",id:"tapo-p-series-smart-plug",level:4}],g={toc:y};function v(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"hausinstallation"},"Hausinstallation"),(0,l.kt)("p",null,"Die aufgelisteten Ger\xe4te k\xf6nnen als ",(0,l.kt)("inlineCode",{parentName:"p"},"meter")," f\xfcr verschiedene Zwecke eingebunden werden. Um die Str\xf6me am Netzanschluss ",(0,l.kt)("inlineCode",{parentName:"p"},"grid")," zu erhalten, die PV Leistung ",(0,l.kt)("inlineCode",{parentName:"p"},"pv"),", die Hausbatterie ",(0,l.kt)("inlineCode",{parentName:"p"},"battery")," oder die Ladeleistung des EV ",(0,l.kt)("inlineCode",{parentName:"p"},"charge"),"."),(0,l.kt)("p",null,"In der Konfigurationsdatei gibt es hierzu den folgenden Bereich:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: grid\n    type: ...\n  - name: pv\n    type: ...\n  - name: battery\n    type: ...\n")),(0,l.kt)("p",null,"Auf dieser Seite findest du die Konfigurationen f\xfcr alle von evcc bekannterweise unterst\xfctzte Komponenten die als Energiemesspunkte (Z\xe4hler) eingebunden werden kann.\nNachdem du das Code-Beispiel f\xfcr deine Z\xe4hler angepasst und in die ",(0,l.kt)("inlineCode",{parentName:"p"},"evcc.yaml")," \xfcbernommen hast, kannst du die Verbindung mit dem Befehl ",(0,l.kt)("inlineCode",{parentName:"p"},"evcc meter")," testen."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"$ ./evcc meter\n\ngrid\n-----\nPower:          -31W\nEnergy:         5195.5kWh\nCurrent L1..L3: 3.05A 1.07A 1.15A\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Die meisten modernen PV-Technikkomponenten, insbesondere Wechselrichter und Batteriespeicher aber auch manche Smart Meter sind mit den s.g. SunSpec-Schemata \xfcber ein standardisiertes Datenmodell via Modbus/TCP abfragbar, ohne dass man dazu auf spezielle ger\xe4tespezifische Datenregister o. \xe4. zugreifen muss. Sollten hier bekannte Systeme also nicht mit einer eigenen Konfiguration namentlich aufgef\xfchrt sein, bedeutet dies in der Regel, dass diese vollst\xe4ndig SunSpec-kompatibel sind und somit keiner ger\xe4tespezifischen Sonderkonfiguration bed\xfcrfen."))),(0,l.kt)("h2",{id:"carlo-gavazzi-em-24"},"Carlo Gavazzi EM 24"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: cg-em24\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: cg-em24\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: cg-em24\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: cg-em24\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,l.kt)("h2",{id:"cfos-powerbrain-meter-"},"cFos PowerBrain Meter \ud83d\udc9a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: cfos\n    usage: charge      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 2\n    host: 192.0.2.2 # Hostname\n    port: 4702 # Port \n")),(0,l.kt)(p.ZP,{mdxType:"SponsorshipRequired"}),(0,l.kt)("h2",{id:"discovergy"},"Discovergy"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: discovergy\n    usage: grid\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    meter: 1ESY1161229886 \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: discovergy\n    usage: pv\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    meter: 1ESY1161229886 \n")))),(0,l.kt)("h2",{id:"dsmr"},"DSMR"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: dsmr\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 1502 # Port # Optional \n")),(0,l.kt)("h2",{id:"e3dc"},"E3DC"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: e3dc\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: e3dc\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: e3dc\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,l.kt)("h2",{id:"eastron"},"Eastron"),(0,l.kt)("h3",{id:"sdm-630"},"SDM 630"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: eastron\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: eastron\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,l.kt)("h3",{id:"sdm-72220230"},"SDM 72/220/230"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron-sdm72_220_230\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: eastron-sdm72_220_230\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: eastron-sdm72_220_230\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron-sdm72_220_230\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,l.kt)("h3",{id:"sdm-72v2"},"SDM 72v2"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: eastron\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: eastron\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: eastron\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: eastron\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,l.kt)("h2",{id:"fenecon"},"FENECON"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h2",{id:"fronius"},"Fronius"),(0,l.kt)("h3",{id:"solar-api-v1"},"Solar API V1"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-solarapi-v1\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-solarapi-v1\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-solarapi-v1\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h3",{id:"symo-gen24-plus"},"Symo GEN24 Plus"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: fronius-gen24\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fronius-gen24\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: fronius-gen24\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,l.kt)("h2",{id:"huawei"},"Huawei"),(0,l.kt)("h3",{id:"sun2000-via-rs485-modbus"},"SUN2000 via RS485 Modbus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: huawei-sun2000-rs485\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')),(0,l.kt)("h3",{id:"sun2000-with-sdongle"},"SUN2000 with SDongle"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,l.kt)("h3",{id:"sun2000-with-sdongle--power-sensor"},"SUN2000 with SDongle & Power Sensor"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: huawei-dongle-powersensor\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: huawei-dongle-powersensor\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: huawei-dongle-powersensor\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,l.kt)("h2",{id:"kostal"},"Kostal"),(0,l.kt)("h3",{id:"piko-mp-plus"},"Piko MP Plus"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko-mp-plus\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")),(0,l.kt)("h3",{id:"piko-piko-ba"},"Piko, Piko BA"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-piko\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-piko\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h3",{id:"plenticore-hybrid"},"Plenticore Hybrid"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: kostal-plenticore\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: kostal-plenticore\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n")))),(0,l.kt)("h3",{id:"smart-energy-meter"},"Smart Energy Meter"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")),(0,l.kt)("h3",{id:"smart-energy-meter-\xfcber-den-wechselrichter"},"Smart Energy Meter (\xfcber den Wechselrichter)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: kostal-ksem-inverter\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 71\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port \n")),(0,l.kt)("h2",{id:"lg-ess-home-810"},"LG ESS Home 8/10"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: lg-ess-home-8-10\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    registration: DE200... # Registriernummer des LG ESS HOME Wechselrichters. \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: lg-ess-home-8-10\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    registration: DE200... # Registriernummer des LG ESS HOME Wechselrichters. \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: lg-ess-home-8-10\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    registration: DE200... # Registriernummer des LG ESS HOME Wechselrichters. \n")))),(0,l.kt)("h2",{id:"openems"},"OpenEMS"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: openems\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: openems\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: openems\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h2",{id:"powerdog"},"Powerdog"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: powerdog\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: powerdog\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,l.kt)("h2",{id:"powerfox-poweropti"},"Powerfox Poweropti"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: powerfox-poweropti\n    usage: grid\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) \n")),(0,l.kt)("h2",{id:"rct-power"},"RCT Power"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: rct-power\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: rct-power\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: rct-power\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h2",{id:"senec-home"},"SENEC .Home"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: senec-home\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: senec-home\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: senec-home\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h2",{id:"shelly-3em"},"Shelly 3EM"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: shelly-3em\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-3em\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: shelly-3em\n    usage: charge\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h2",{id:"siemens-pac-2200"},"Siemens PAC 2200"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: siemens-pac2200\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: siemens-pac2200\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: siemens-pac2200\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_charger\n    type: template\n    template: siemens-pac2200\n    usage: charge      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,l.kt)("h2",{id:"sma"},"SMA"),(0,l.kt)("h3",{id:"data-manager-m-lite"},"Data Manager M Lite"),(0,l.kt)("p",null,'In der Weboberfl\xe4che des SMA Data Manager muss im Bereich "Externe Kommunikation" der Schalter "Modbus Server aktivieren" eingeschaltet sein.'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-data-manager-m-lite\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")),(0,l.kt)("h3",{id:"energy-meter"},"Energy Meter"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-energy-meter\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-energy-meter\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h3",{id:"smart-energy-hybrid-wechselrichter"},"Smart Energy Hybrid-Wechselrichter"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-hybrid\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-hybrid\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 3\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,l.kt)("h3",{id:"sunny-home-manager-20"},"Sunny Home Manager 2.0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sma-home-manager\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")),(0,l.kt)("h3",{id:"wechselrichter"},"Wechselrichter"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sma-inverter\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort f\xfcr Benutzergruppe Benutzer # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sma-inverter\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort f\xfcr Benutzergruppe Benutzer # Optional \n")))),(0,l.kt)("h2",{id:"solaredge"},"SolarEdge"),(0,l.kt)("h3",{id:"hybrid"},"Hybrid"),(0,l.kt)("p",null,"Nur ein System kann auf den Wechselrichter zugreifen!"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solaredge-hybrid\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port 502 (SetApp) oder 1502 (LCD) # Optional\n    timeout: 30s # Akzeptiere keine Daten die \xe4lter als dieser Wert sind # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solaredge-hybrid\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port 502 (SetApp) oder 1502 (LCD) # Optional\n    timeout: 30s # Akzeptiere keine Daten die \xe4lter als dieser Wert sind # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solaredge-hybrid\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port 502 (SetApp) oder 1502 (LCD) # Optional\n    timeout: 30s # Akzeptiere keine Daten die \xe4lter als dieser Wert sind # Optional \n")))),(0,l.kt)("h3",{id:"wechselrichter-1"},"Wechselrichter"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solaredge-inverter\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 30s # Akzeptiere keine Daten die \xe4lter als dieser Wert sind # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solaredge-inverter\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 1502 # Port\n    timeout: 30s # Akzeptiere keine Daten die \xe4lter als dieser Wert sind # Optional \n")))),(0,l.kt)("h2",{id:"solarlog"},"Solarlog"),(0,l.kt)("p",null,"Wir empfehlen dieses Ger\xe4t f\xfcr den Netzbezug/Einspeisewerte nur zu verwenden, wenn kein anderes Ger\xe4t diese Daten liefert.\nFalls eine Hausbatterie angeschlossen ist sollte dieses Ger\xe4t auf keinen Fall f\xfcr die erw\xe4hnten Werte verwendet werden!"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarlog\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarlog\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,l.kt)("h2",{id:"solarwatt"},"Solarwatt"),(0,l.kt)("h3",{id:"myreserve"},"MyReserve"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt-myreserve\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt-myreserve\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt-myreserve\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")))),(0,l.kt)("h3",{id:"myreserve-matrix-lan-oder-powergateway"},"MyReserve Matrix (LAN oder PowerGateway)"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solarwatt-myreserve-matrix\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n")))),(0,l.kt)("h2",{id:"solax"},"Solax"),(0,l.kt)("h3",{id:"hybrid-1"},"Hybrid"),(0,l.kt)("p",null,"Der Solax Inverter muss in der SolaxCloud angemeldet sein."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Achtung"),": Die Werte k\xf6nnen nur alle 150s abgerufen werden und dann auch 5 Minuten alt sein. Die Laderegelung nach PV kann hiermit nicht optimal gesteuert werden!"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: solax-hybrid-cloud\n    usage: grid\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax-hybrid-cloud\n    usage: pv\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: solax-hybrid-cloud\n    usage: battery\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n')))),(0,l.kt)("h3",{id:"hybrid-x3"},"Hybrid X3"),(0,l.kt)("p",null,"Der Solax Inverter muss via Ethernet an das lokale Netzwerk angeschlossen sein."),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: solax-x3\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: solax-x3\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: solax-x3\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port \n")))),(0,l.kt)("h3",{id:"wechselrichter-2"},"Wechselrichter"),(0,l.kt)("p",null,"Der Solax Inverter muss in der SolaxCloud angemeldet sein."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Achtung"),": Die Werte k\xf6nnen nur alle 150s abgerufen werden und dann auch 5 Minuten alt sein. Die Laderegelung nach PV kann hiermit nicht optimal gesteuert werden!"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: solax-inverter-cloud\n    usage: pv\n    tokenid: # Auf https://www.solaxcloud.com/#/api den Wert von "ObtaintokenID" hier eintragen.\n    serial: # Auf https://www.solaxcloud.com/#/inverter die Registriernummer hier eintragen. \n')),(0,l.kt)("h2",{id:"sonnenbatterie-eco10"},"Sonnenbatterie Eco/10"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sonnenbatterie-eco10\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sonnenbatterie-eco10\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sonnenbatterie-eco10\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8080 # Port # Optional \n")))),(0,l.kt)("h2",{id:"sungrow-inverter"},"Sungrow Inverter"),(0,l.kt)("p",null,"Die Verbindung zu Sungrow-Ger\xe4ten ist nur \xfcber den LAN-Port (am Ger\xe4t) oder seriell via RS485-Port m\xf6glich. Nicht verf\xfcgbar \xfcber das WiNet-S-Dongle!"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: sungrow\n    usage: grid      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: sungrow\n    usage: pv      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: sungrow\n    usage: battery      \n    \n    # RS485 via adapter (Modbus RTU)\n    modbus: rs485serial\n    id: 1\n    device: /dev/ttyUSB0 # USB-RS485 Adapter Adresse\n    baudrate: 9600 # Pr\xfcfe die Ger\xe4teeinstellungen, typische Werte sind 9600, 19200, 38400, 57600, 115200\n    comset: "8N1" # Kommunikationsparameter f\xfcr den Adapter\n    \n    # RS485 via TCP/IP (Modbus RTU)\n    modbus: rs485tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port\n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n')))),(0,l.kt)("h2",{id:"tesla-powerwall"},"Tesla Powerwall"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_grid\n    type: template\n    template: tesla-powerwall\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort des Benutzers "Kunde" \n'))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_pv\n    type: template\n    template: tesla-powerwall\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort des Benutzers "Kunde" \n'))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'meters:\n  - name: my_battery\n    type: template\n    template: tesla-powerwall\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    password: # Passwort des Benutzers "Kunde" \n')))),(0,l.kt)("h2",{id:"tq-energy-manager-em2xxem3xx"},"TQ Energy Manager EM2xx/EM3xx"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: tq-em\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 80 # Port # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n")),(0,l.kt)("h2",{id:"varta"},"VARTA"),(0,l.kt)("h3",{id:"energiespeicher-kein-pv-sensor"},"Energiespeicher (kein PV-Sensor)"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: varta-energiespeicher-battery-only\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: varta-energiespeicher-battery-only\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,l.kt)("h3",{id:"energiespeicher-mit-pv-sensor"},"Energiespeicher (mit PV-Sensor)"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: varta-energiespeicher\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: varta-energiespeicher\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: varta-energiespeicher\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,l.kt)("h2",{id:"victron-energy"},"Victron Energy"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: victron-energy\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: victron-energy\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: victron-energy\n    usage: battery\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 502 # Port # Optional \n")))),(0,l.kt)("h2",{id:"generische-unterst\xfctzung"},"Generische Unterst\xfctzung"),(0,l.kt)("h3",{id:"manuell"},"manuell"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_meter\n    type: custom\n    power: # power (W)\n      source: # plugin type\n      # ...\n    energy: # optional energy (kWh)\n      source: # plugin type\n      # ...\n    soc: # optional battery soc (%)\n      source: # plugin type\n      # ...\n    currents: # optional currents (A)\n      - source: # L1 plugin type\n        # ...\n      - source: # L2 plugin type\n        # ...\n      - source: # L3 plugin type\n        # ...\n")),(0,l.kt)("h3",{id:"volksz\xe4hler"},"Volksz\xe4hler"),(0,l.kt)("h4",{id:"http-api"},"HTTP API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-http\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 80 # Port # Optional\n    uuid: \n")),(0,l.kt)("h4",{id:"http-api-import--export"},"HTTP API, Import & Export"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-importexport\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 80 # Port # Optional\n    importuuid:\n    exportuuid: \n")),(0,l.kt)("h4",{id:"websocket-api"},"WebSocket API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: volkszaehler-ws\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8082 # Port # Optional\n    uuid: \n")),(0,l.kt)("h3",{id:"vzlogger"},"vzlogger"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: vzlogger\n    usage: grid\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    port: 8081 # Port # Optional\n    uuid: \n")),(0,l.kt)("h3",{id:"wechselrichter-sunspec"},"Wechselrichter (SunSpec)"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"grid",label:"Netz",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_grid\n    type: template\n    template: sunspec\n    usage: grid      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"pv",label:"PV",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: sunspec\n    usage: pv      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n"))),(0,l.kt)(m.Z,{value:"battery",label:"Batterie",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_battery\n    type: template\n    template: sunspec\n    usage: battery      \n    \n    # Modbus TCP\n    modbus: tcpip\n    id: 1\n    host: 192.0.2.2 # Hostname\n    port: 502 # Port \n")))),(0,l.kt)("h2",{id:"schaltbare-steckdosen"},"Schaltbare Steckdosen"),(0,l.kt)("h3",{id:"avm-fritzdect"},"AVM FritzDECT"),(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(m.Z,{value:"pv",label:"PV",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: fritzdect\n    usage: pv\n    uri: https://fritz.box # Optional\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    ain: 007788992233 # Die AIN ist auf dem Typenschild auf der Ger\xe4ter\xfcckseite aufgedruckt. \n"))),(0,l.kt)(m.Z,{value:"charge",label:"Wallbox",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_charger\n    type: template\n    template: fritzdect\n    usage: charge\n    uri: https://fritz.box # Optional\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen)\n    ain: 007788992233 # Die AIN ist auf dem Typenschild auf der Ger\xe4ter\xfcckseite aufgedruckt. \n")))),(0,l.kt)("h3",{id:"shelly-1pm"},"Shelly 1PM"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: shelly-1pm\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.) # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional\n    channel: 0 # Optional \n")),(0,l.kt)("h3",{id:"tasmota"},"Tasmota"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tasmota\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: admin # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.) # Optional\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) # Optional \n")),(0,l.kt)("h3",{id:"tp-link"},"TP-Link"),(0,l.kt)("h4",{id:"h-series-smart-plug"},"H-Series Smart Plug"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tplink\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname \n")),(0,l.kt)("h4",{id:"tapo-p-series-smart-plug"},"Tapo P-Series Smart Plug"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"meters:\n  - name: my_pv\n    type: template\n    template: tapo\n    usage: pv\n    host: 192.0.2.2 # IP-Adresse oder Hostname\n    user: # Benutzerkonto (bspw. E-Mail Adresse, User Id, etc.)\n    password: # Passwort des Benutzerkontos (bei f\xfchrenden Nullen bitte in einfache Hochkommata setzen) \n")))}v.isMDXComponent=!0}}]);